// Generated by CoffeeScript 1.9.3
(function() {
  var exec, explode, filter, fs, implode, mgvg, s, subword, word,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  exec = require('process-promises').exec;

  fs = require('fs');

  implode = function(sep, a) {
    return Array.prototype.join.call(a, sep);
  };

  explode = function(sep, a) {
    return a.split(sep);
  };

  word = function(number, a, sep) {
    var av;
    if (sep == null) {
      sep = ' ';
    }
    av = explode(sep, a);
    if (number < 0) {
      number = av.length - 1;
    }
    return av[number];
  };

  subword = function(start, length, subject, separator) {
    var av, number;
    if (separator == null) {
      separator = ' ';
    }
    av = explode(separator, subject);
    if (number < 0) {
      number = av.length - 1;
    }
    return av[number];
  };

  mgvg = function(keys) {
    var cmd, i, len, r, s, xa;
    if (keys == null) {
      keys = false;
    }
    r = implode('  | xargs -d "\\n" ag -l ', keys);
    cmd = 'ag -l ' + r;
    xa = ' | xargs -d "\\n"';
    cmd += xa + ' grep ^ ';
    for (i = 0, len = keys.length; i < len; i++) {
      s = keys[i];
      cmd += ' | ag ' + r;
    }
    return cmd;
  };

  filter = function(subject, filt) {
    var i, len, r, s;
    if (Array.isArray(subject)) {
      r = '';
      for (i = 0, len = subject.length; i < len; i++) {
        s = subject[i];
        r += filter(s, filt) + "\n";
      }
    }
    if (indexOf.call(subject, filt) >= 0) {
      return s;
    }
    return '';
  };

  s = mgvg(['implode', 'log']);

  fs.writeFile('/tmp/testexec', s, function() {
    exec('/tmp/testexec').then(function(result) {
      var i, len, r, results;
      r = result.stdout;
      r = explode("\n", r);
      results = [];
      for (i = 0, len = r.length; i < len; i++) {
        s = r[i];
        if (s) {
          if ('cat "' + s + '"' !== "") {
            results.push(exec('cat "' + s + '"').then(function(result) {
              r = result.stdout;
              r = explode("\n", r);
              return console.log(filter(r, 'split'));
            }));
          } else {
            results.push(void 0);
          }
        } else {
          results.push(void 0);
        }
      }
      return results;
    });
  });

}).call(this);
